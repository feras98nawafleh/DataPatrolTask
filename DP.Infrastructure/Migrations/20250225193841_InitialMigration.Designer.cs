// <auto-generated />
using System;
using DP.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DP.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250225193841_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DP.Core.Entities.Group", b =>
                {
                    b.Property<string>("GroupId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("GroupId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("DP.Core.Entities.GroupPolicy", b =>
                {
                    b.Property<string>("PolicyId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GroupId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GroupPolicyId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PolicyId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupPolicies");
                });

            modelBuilder.Entity("DP.Core.Entities.Policy", b =>
                {
                    b.Property<string>("PolicyId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("PolicyName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PolicyType")
                        .HasColumnType("int");

                    b.HasKey("PolicyId");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("DP.Core.Entities.User", b =>
                {
                    b.Property<string>("UserId")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DP.Core.Entities.UserGroup", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("GroupId")
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("UserId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("UserGroups");
                });

            modelBuilder.Entity("DP.Core.Entities.UserRequest", b =>
                {
                    b.Property<long>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("RequestId"));

                    b.Property<DateTime>("CompletionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("RequestCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestedBy")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("RequestId");

                    b.HasIndex("RequestedBy");

                    b.ToTable("UserRequests");
                });

            modelBuilder.Entity("DP.Core.Entities.GroupPolicy", b =>
                {
                    b.HasOne("DP.Core.Entities.Group", "Group")
                        .WithMany("GroupPolicies")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DP.Core.Entities.Policy", "Policy")
                        .WithMany("GroupPolicies")
                        .HasForeignKey("PolicyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("DP.Core.Entities.UserGroup", b =>
                {
                    b.HasOne("DP.Core.Entities.Group", "Group")
                        .WithMany("UserGroups")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DP.Core.Entities.User", "User")
                        .WithMany("UserGroups")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DP.Core.Entities.UserRequest", b =>
                {
                    b.HasOne("DP.Core.Entities.User", "RequesterUser")
                        .WithMany("Requests")
                        .HasForeignKey("RequestedBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequesterUser");
                });

            modelBuilder.Entity("DP.Core.Entities.Group", b =>
                {
                    b.Navigation("GroupPolicies");

                    b.Navigation("UserGroups");
                });

            modelBuilder.Entity("DP.Core.Entities.Policy", b =>
                {
                    b.Navigation("GroupPolicies");
                });

            modelBuilder.Entity("DP.Core.Entities.User", b =>
                {
                    b.Navigation("Requests");

                    b.Navigation("UserGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
